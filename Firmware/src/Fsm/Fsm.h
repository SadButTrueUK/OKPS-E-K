/**
* \file    Fsm.h
* \brief   Иерархический ДКА
* \details Интерфейс
*
* \version 1.0.1
* \date    28-09-2017
* \author  Мирошниченко А.А.
*/

//*****************************************************************************
// Команды препроцессора для предотвращения повторного включения содержимого файла
//*****************************************************************************
#ifndef FSM_H
#define FSM_H

//*****************************************************************************
// Подключаемые файлы
//*****************************************************************************
#include <stdbool.h>

//*****************************************************************************
// Объявление типов данных
//*****************************************************************************

//*****************************************************************************
typedef struct Fsm_ Fsm;                  ///< Структура дочерних состояний.
typedef struct FsmState_ FsmState;        ///< Состояние конечного автомата.

//*****************************************************************************
/// \brief Идентификаторы состояний автомата.
///
typedef enum 
{
    eStateInitialId        = 1,        ///< идентификатор состояния инициализации
    eStateMainId           = 2,        ///< идентификатор состояния основной работы
    eStateSafePassiveId    = 3,        ///< идентификатор безопасного пассивного состояния
    eStateSafeActiveId     = 4,        ///< идентификатор безопасного активного состояния
    eStateWorkingId        = 5,        ///< идентификатор рабочего состояния
    eStateWorkingActiveId  = 6,        ///< идентификатор рабочего активного состояния
    eStateTopId            = 7         ///< идентификатор корневого состояния ДКА
} ModeId;

//*****************************************************************************
/// \brief Состояние конечного автомата.
///
struct FsmState_ 
{
    /// \brief Обработка входа в состояние.
    /// \note Не должен содержать переходов между состояниями.
    ///
    void( *onEntry)( void );

    /// \brief Обработка выхода из состояния.
    /// \note Не должен содержать переходов между состояниями.
    ///
    void( *onExit)( void );

    /// \brief Обработка событий, проверка условий переходов.
    /// \note Если в обработчике выполнился переход в другое состояние,
    /// обработчик должен возвратить false.
    /// \retval true  - по завершению будут вызваны
    /// обработчики вложенных состояний;
    /// \retval false - не будут вызваны обработчики
    /// вложенных состояний.
    ///
    bool( *onRun)( void );

    const FsmState *top;            ///< Указатель на корневое состояние.
    const FsmState *super;          ///< Указатель на родительское состояние.
    Fsm            *fsm;            ///< Указатель на структуру дочерних состояний.
    const FsmState *initial;        ///< Указатель на начальное дочернее состояние.
    ModeId         id;              ///< Идентификатор текущего режима.
};

//*****************************************************************************
/// \brief Структура дочерних состояний.
///
struct Fsm_ 
{
    const FsmState *current;        ///< Указатель на активное состояние.
};

//*****************************************************************************
// Прототипы интерфейсных функций
//*****************************************************************************

//*****************************************************************************
/// \brief Запуск ДКА.
/// \param state - указатель на корневое состояние автомата.
///
void Fsm_start( const FsmState *state );

//*****************************************************************************
/// \brief Переход в состояние.
/// \param to - указатель на состояние, в которое выполняется переход.
///
void Fsm_transit( const FsmState *to );

//*****************************************************************************
/// \brief Работа ДКА.
/// \param state - указатель на корневое состояние автомата.
///
void Fsm_run( const FsmState *state );

#endif

//*****************************************************************************
/**
* История изменений: 
*
* Версия 1.0.1
* Дата   28-09-2017
* Автор  Мирошниченко А.А.
*
* Изменения:
*    Базовая редакция.
*/

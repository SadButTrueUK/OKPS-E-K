/**
* \file    ActivityManager.h
* \brief   Управление активностью прибора 
* \details Интерфейс
*
* \version 1.0.1
* \date    18-05-2017
* \author  Кругликов В.П.
*/

//*****************************************************************************
// Команды препроцессора для предотвращения повторного включения содержимого файла
//*****************************************************************************
#ifndef ACTIVITYMANAGER_H
#define ACTIVITYMANAGER_H

//*****************************************************************************
// Подключаемые файлы
//*****************************************************************************
#include <stdbool.h>
#include <stdint.h>
#include "Rs422.h"

//*****************************************************************************
// Определение типов данных
//*****************************************************************************

//*****************************************************************************
typedef struct ActivityManager_DeviceStr_ ActivityManager_DeviceStr;        ///< Определение типа структуры состояния.

//*****************************************************************************
// Прототипы интерфейсных функций
//*****************************************************************************

//*****************************************************************************
/// \brief Инициализация.
/// \param status – состояние статуса (true (основной), false (резервный)).
/// \return Указатель на структуру состояния,
/// который должен передаваться во все интерфейсные функции
/// \a ActivityManager в качестве параметра.
///
ActivityManager_DeviceStr *ActivityManager_ctor( bool status );

//*****************************************************************************
/// \brief Управление работой модуля.
/// \note Вызывается из главного цикла с периодом 1 мс.
/// \param str - указатель на структуру состояния.
///
void ActivityManager_run( ActivityManager_DeviceStr *str );

//*****************************************************************************
/// \brief Включение / выключение модуля.
/// \param str - указатель на структуру состояния;
/// \param enable - состояние модуля (true (включен), false (выключен)).
///
void ActivityManager_setEnable( ActivityManager_DeviceStr *str, bool enable );

//*****************************************************************************
/// \brief Установка состояния прибора.
/// \param str - указатель на структуру состояния;
/// \param state - устанавливаемое состояние работы прибора  (true (рабочее), false (безопасное)).
///
void ActivityManager_setState( ActivityManager_DeviceStr *str, bool state );

//*****************************************************************************
/// \brief Установка состояния контактов реле РПВ.
/// \param str - указатель на структуру состояния;
/// \param state - устанавливаемое состояние работы прибора (true (рабочее), false (безопасное)).
///
void ActivityManager_setRPVoutState( ActivityManager_DeviceStr *str, bool state );

//*****************************************************************************
/// \brief Установка наличия активной команды.
/// \param str - указатель на структуру состояния;
/// \param presence - состояние команды (true (есть команда), false (нет команды)).
///
void ActivityManager_setActiveCommand( ActivityManager_DeviceStr *str, bool presence );

//*****************************************************************************
/// \brief Установка состояния связи по интерфейсу RS-422.
/// \param str - указатель на структуру состояния;
/// \param line - номер линии связи;
/// \param connect - состояние связи (true (есть связь), false (нет связи)).
///
void ActivityManager_setRS422connect( ActivityManager_DeviceStr *str, Rs422_numLine line, bool connect );

//*****************************************************************************
/// \brief Установка состояния связи с УС по интерфейсу RS-422.
/// \param str - указатель на структуру состояния;
/// \param line - номер линии связи;
/// \param connect - состояние связи (true (есть связь), false (нет связи)).
///
void ActivityManager_setRS422ctrlSysConnect( ActivityManager_DeviceStr *str, Rs422_numLine line, bool connect );

//*****************************************************************************
/// \brief Получает состояние активности прибора.
/// \param str - указатель на структуру состояния.
/// \retval true  - активный;
/// \retval false - пассивный.
///
bool ActivityManager_isActive( ActivityManager_DeviceStr *str );

//*****************************************************************************
/// \brief Получает состояние связи соседа c УС.
/// \param str - указатель на структуру состояния;
/// \param line - номер линии связи.
/// \retval true  - есть связь;
/// \retval false - нет связи.
///
bool ActivityManager_getRS422neighborCtrlSysConnect( ActivityManager_DeviceStr *str, Rs422_numLine line );

//*****************************************************************************
/// \brief Получает состояние управления реле.
/// \param str - указатель на структуру состояния.
/// \retval true  - включить;
/// \retval false - выключить.
///
bool ActivityManager_isRelayCtrlOn( ActivityManager_DeviceStr *str );

//*****************************************************************************
/// \brief Получает состояние соседа.
/// \param str - указатель на структуру состояния.
/// \retval true  - рабочее;
/// \retval false - безопасное.
///
bool ActivityManager_isNeighborWorking( ActivityManager_DeviceStr *str );

//*****************************************************************************
/// \brief Получает состояние связи с соседом.
/// \param str - указатель на структуру состояния.
/// \retval true  - есть связь;
/// \retval false - нет связи.
///
bool ActivityManager_getNeighborConnection( ActivityManager_DeviceStr *str );

//*****************************************************************************
///\brief Смена активности по приказу от управляющей системы.
/// \param str - указатель на структуру состояния.
/// \param value - требуемое состояние активности, установленное в приказе.
///
void ActivityManager_changeActivity( ActivityManager_DeviceStr *str, uint8_t value );

//*****************************************************************************
///\brief Получить состояние инициализации менеджера активности своего прибора.
/// \param str - указатель на структуру состояния.
/// \retval true  - инициализация завершена.
/// \retval false - инициализация не завершена.
bool ActivityManager_getInitDeviceState( ActivityManager_DeviceStr *str );

#endif

//*****************************************************************************
/**
* История изменений: 
* 
* Версия 1.0.1
* Дата   18-05-2017
* Автор  Кругликов В.П.
* 
* Изменения:
*     Базовая версия.
*/

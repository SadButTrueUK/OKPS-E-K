;--------------------------------------------------------------------------------------------------
.equ    TABLE_OPT, 1
;--------------------------------------------------------------------------------------------------
.global _sqrt_topt
;--------------------------------------------------------------------------------------------------
.text
;--------------------------------------------------------------------------------------------------
.macro  bxh     x, xn, r, rn, bitn, lbl
        lsr     w\r, w\rn
        bset    w\r, #\bitn
        sub     w\x, w\r, w\xn
        bra     nc, \lbl
        bset    w\rn, #\bitn
.endm
;--------------------------------------------------------------------------------------------------
.macro  bxx     xl, xh, xnl, xnh, rl, rh, rnl, rnh, bitn, lbl
        lsr     w\rh, w\rnh
        rrc     w\rl, w\rnl
    .if \bitn >= 16
        bset    w\rh, #\bitn-16
    .else
        bset    w\rl, #\bitn
    .endif
        sub     w\xl, w\rl, w\xnl
        subb    w\xh, w\rh, w\xnh
        bra     nc, \lbl
    .if \bitn >= 16
        bset    w\rnh, #\bitn-16
    .else
        bset    w\rnl, #\bitn
    .endif
.endm
;--------------------------------------------------------------------------------------------------
.if     !TABLE_OPT
;--------------------------------------------------------------------------------------------------
.macro  ii_z_o  bitn
        bxh     1, 3, 5, 7, \bitn-16, z_\bitn
.endm
.macro  ii_z_e  bitn
        bxh     1, 3, 7, 5, \bitn-16, z_\bitn
.endm
.macro  ii_x_o  bitn
        bxh     3, 1, 5, 7, \bitn-16, x_\bitn
.endm
.macro  ii_x_e  bitn
        bxh     3, 1, 7, 5, \bitn-16, x_\bitn
.endm
.macro  jj_z_o  bitn
        bxx     0,1, 2,3, 4,5, 6,7, \bitn, z_\bitn
.endm
.macro  jj_z_e  bitn
        bxx     0,1, 2,3, 6,7, 4,5, \bitn, z_\bitn
.endm
.macro  jj_x_o  bitn
        bxx     2,3, 0,1, 4,5, 6,7, \bitn, x_\bitn
.endm
.macro  jj_x_e  bitn
        bxx     2,3, 0,1, 6,7, 4,5, \bitn, x_\bitn
.endm
;--------------------------------------------------------------------------------------------------
_sqrt_topt:
;   size:   194 words
;   time:   105 ticks (with call & return)
_sq_snt:
        mov     w0, w2
        mul.uu  w4, #0, w4
        mul.uu  w6, #0, w6
        ii_z_o  30
        ii_x_e  28
z_28:   ii_z_o  26
x_26:   ii_x_e  24
z_24:   ii_z_o  22
x_22:   ii_x_e  20
z_20:   ii_z_o  18
x_18:   ii_x_e  16
z_16:   jj_z_o  14
x_14:   jj_x_e  12
z_12:   jj_z_o  10
x_10:   jj_x_e  8
z_8:    jj_z_o  6
x_6:    jj_x_e  4
z_4:    jj_z_o  2
x_2:    jj_x_e  0
z_0:    mov     w4, w0
        return
z_30:   ii_z_e  28
x_28:   ii_x_o  26
z_26:   ii_z_e  24
x_24:   ii_x_o  22
z_22:   ii_z_e  20
x_20:   ii_x_o  18
z_18:   ii_z_e  16
x_16:   jj_x_o  14
z_14:   jj_z_e  12
x_12:   jj_x_o  10
z_10:   jj_z_e  8
x_8:    jj_x_o  6
z_6:    jj_z_e  4
x_4:    jj_x_o  2
z_2:    jj_z_e  0
x_0:    mov     w4, w0
        return
;--------------------------------------------------------------------------------------------------
.else   ; TABLE_OPT
;--------------------------------------------------------------------------------------------------
.macro  ii_u_o  bitn
        bxh     1, 3, 5, 7, \bitn-16, u_\bitn
.endm
.macro  ii_u_e  bitn
        bxh     1, 3, 7, 5, \bitn-16, u_\bitn
.endm
.macro  ii_v_o  bitn
        bxh     3, 1, 5, 7, \bitn-16, v_\bitn
.endm
.macro  ii_v_e  bitn
        bxh     3, 1, 7, 5, \bitn-16, v_\bitn
.endm
.macro  jj_u_o  bitn
        bxx     0,1, 2,3, 4,5, 6,7, \bitn, u_\bitn
.endm
.macro  jj_u_e  bitn
        bxx     0,1, 2,3, 6,7, 4,5, \bitn, u_\bitn
.endm
.macro  jj_v_o  bitn
        bxx     2,3, 0,1, 4,5, 6,7, \bitn, v_\bitn
.endm
.macro  jj_v_e  bitn
        bxx     2,3, 0,1, 6,7, 4,5, \bitn, v_\bitn
.endm
;--------------------------------------------------------------------------------------------------
_sqrt_topt:
;   size:   152 words + 512 w. table
;   time:   90 ticks (w/ call & return)
        lsr     w1, #6, w2
        mov     #sq_t, w3
        mov.b   [w2+w3], w2
        ze      w2, w2
        mul.uu  w2, w2, w4
        sl      w4, #6, w4
        sub     w1, w4, w1
        
        sl      w2, #6, w5
        clr     w4
        mov     w0, w2
        clr     w6
        
        ii_u_o  20
        ii_v_e  18
u_18:   ii_u_o  16
v_16:   jj_v_e  14
u_14:   jj_u_o  12
v_12:   jj_v_e  10
u_10:   jj_u_o  8
v_8:    jj_v_e  6
u_6:    jj_u_o  4
v_4:    jj_v_e  2
u_2:    jj_u_o  0
v_0:    mov     w6, w0
        return
        
u_20:   ii_u_e  18
v_18:   ii_v_o  16
u_16:   jj_u_e  14
v_14:   jj_v_o  12
u_12:   jj_u_e  10
v_10:   jj_v_o  8
u_8:    jj_u_e  6
v_6:    jj_v_o  4
u_4:    jj_u_e  2
v_2:    jj_v_o  0
u_0:    mov     w6, w0
        return
;--------------------------------------------------------------------------------------------------
.section .const, psv
;--------------------------------------------------------------------------------------------------
sq_t:
.byte   0,  1,  1,  1,  2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  5,  5
.byte   5,  5,  5,  5,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7
.byte   8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9,  9
.byte   9,  9,  9,  9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11
.byte  11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12
.byte  12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13
.byte  13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14
.byte  14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15
.byte  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
.byte  16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17
.byte  17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18
.byte  18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19
.byte  19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20
.byte  20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21
.byte  21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21
.byte  21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22
.byte  22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23
.byte  23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23
.byte  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24
.byte  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25
.byte  25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25
.byte  25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26
.byte  26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27
.byte  27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27
.byte  27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28
.byte  28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28
.byte  28, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29
.byte  29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29
.byte  29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
.byte  30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30
.byte  30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
.byte  31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31
;--------------------------------------------------------------------------------------------------
.endif  ; TABLE_OPT
;--------------------------------------------------------------------------------------------------
.end
;--------------------------------------------------------------------------------------------------

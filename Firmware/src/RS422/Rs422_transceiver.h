/**
* \file    Rs422_transceiver.h
* \brief   Внутренние функции обмена по интерфейсу RS-422
* \details Интерфейс
*
* \version 1.0.1
* \date    22-05-2017
* \author  Кругликов В.П.
*/

//*****************************************************************************
// Команды препроцессора для предотвращения повторного включения содержимого файла
//*****************************************************************************
#ifndef RS422_TRANSCEIVER_H
#define RS422_TRANSCEIVER_H

//*****************************************************************************
// Подключаемые файлы
//*****************************************************************************
#include "Rs422_dataTypes.h"

//*****************************************************************************
// Глобальные константы, определенные через макросы
//*****************************************************************************
#define INDEX_OUT_ALARM    4           ///< Индекс в телеграмме статуса: код аларма.
#define INDEX_OUT_DATE_0   5           ///< Индекс в телеграмме статуса: 1-ый байт данных.
#define CO_PRIKAZ_A        0x04        ///< Тип телеграммы, приказ телеграммы А.
#define CO_PRIKAZ_B        0x06        ///< Тип телеграммы, приказ телеграммы В.
#define CO_STATUS_A        0x08        ///< Тип телеграммы, статус телеграммы А.
#define CO_STATUS_B        0x0C        ///< Тип телеграммы, статус телеграммы В.
#define CO_MASK            0x0F        ///< Маска для чтения типа телеграммы.
#define LENGHT_MASK        0xF0        ///< Маска для чтения длины телеграммы.
#define DLE                0x10        ///< Маркер специального символа.
#define STX                0x02        ///< Специальный символ, маркер начала телеграммы.
#define ETX                0x83        ///< Специальный символ, маркер конца телеграммы.
#define INDEX_N_CICL       3           ///< Индекс в телеграмме: номер цикла.
#define INDEX_IN_DATE_0    4           ///< Индекс в телеграмме приказа: 1-ый байт данных.
#define INDEX_ADDRESS_OK_0 0           ///< Индекс в телеграмме адреса прибора (0-ой байт).
#define INDEX_ADDRESS_OK_1 1           ///< Индекс в телеграмме адреса прибора (1-ый байт).
#define INDEX_ML_CO        2           ///< Индекс в телеграмме: тип телеграммы + длина телеграммы.
#define OBMEN_PEREDACHA    1           ///< В состояние передачи.
#define OBMEN_PRIEM        0           ///< В состояние приема.

//*****************************************************************************
// Прототипы интерфейсных функций
//*****************************************************************************

//*****************************************************************************
/// \brief Инициализация переменных приема телеграмм по RS-422.
/// \param inStr - указатель на структуру принимаемых данных.
///
void inRS422_ctor( InRS422 *inStr );

//*****************************************************************************
/// \brief Инициализация переменных передачи данных по RS-422.
/// \param outStr - указатель на структуру передаваемых данных.
///
void outRS422_ctor( OutRS422 *outStr );

//*****************************************************************************
/// \brief Прием и HDLC-декодирование телеграммы по линии связи RS-422.
/// \param inStr - указатель на структуру принимаемых данных; 
/// \param addr  - адрес прибора.
/// \note Вызывается из прерывания с периодом 62,5 мкс.
///
void inRS422_run( InRS422 *inStr, uint16_t addr );

//*****************************************************************************
/// \brief Передача телеграммы по линии связи RS-422.
/// \param outStr - указатель на структуру передаваемых данных.
/// \note Вызывается из прерывания с периодом 62,5 мкс.
///
void outRS422_run( OutRS422 *outStr );

//*****************************************************************************
/// \brief Формирует код аларма для телеграмм статуса.
/// \param nCycle     - номер цикла;
/// \param alarmArray - указатель на массив. 
/// \return Код аларма.
///
uint8_t formAlarmRS422( uint8_t nCycle, uint8_t *alarmArray );

//*****************************************************************************
/// \brief Проверка корректности короткой телеграммы.
/// \param date - содержимое телеграммы.
/// \retval true  - телеграмма корректна;
/// \retval false - телеграмма некорректна.
///
bool checkShortTelegramm( uint8_t date );

//*****************************************************************************
/// \brief Проверка корректности нормальной телеграммы.
/// \details Проводится проверка:
/// \details - значение поля длины телеграммы совпадает с фактической;
/// \details - значение поля типа телеграмм: приказ А или приказ В;
/// \details - значение поля контрольной суммы телеграммы совпадает с фактической. 
/// \details Совпадение адреса в телеграмме с адресом прибора проверяется при приеме телеграммы.
/// \param aTele      - указатель на адрес массива с телеграммой;
/// \param lengthTele - длина телеграммы.
/// \retval true  - телеграмма корректна;
/// \retval false - телеграмма некорректна.
///
bool checkTelegramm( uint8_t *aTele, uint8_t lengthTele );

//*****************************************************************************
/// \brief Проверка взаимной корректности телеграмм приказа А и В.
/// \details Проводится проверка:
/// \details - номер цикла телеграммы 1 + номер цикла телеграммы 2 = 0xFF;
/// \details - есть телеграмма А и В;
/// \details - длины телеграмм А и В совпадают;
/// \details - данные в телеграммах инверсно совпадают.
///
/// \param aTele1 - указатель на адрес массива с телеграммой приказа 1;
/// \param aTele2 - указатель на адрес массива с телеграммой приказа 2.
/// \retval true  - телеграммы взаимно корректны;
/// \retval false - телеграммы взаимно некорректны.
///
bool checkTelegramAB( uint8_t *aTele1, uint8_t *aTele2 );

//*****************************************************************************
/// \brief Получает адрес и длину принятой телеграммы.
/// \details После возврата адреса и длины принятой телеграммы признак принятия 
/// телеграммы обнуляется.
/// \param inStr   - указатель на структуру принимаемых данных;
/// \param aTele   - указатель на адрес массива с принятой телеграммой;
/// \param ptrTime - указатель, по которому записывается время от начала приема телеграммы в единицах 31,25 мкс.
/// \return Длину принятой телеграммы.
///
uint8_t InRS422_getTele( InRS422 *inStr, uint8_t **aTele, uint16_t *ptrTime );

//*****************************************************************************
/// \brief Формирует телеграммы статуса.
/// \param aTele        - указатель на адрес массива для телеграммы статуса;
/// \param type         - тип формируемой телеграммы А или В;
/// \param adrOK        - адрес прибора;
/// \param nCycle       - номер цикла;
/// \param alarm        - код аларма;
/// \param statusArray  - указатель на массив со статусом;
/// \param statusLength - длина массива статуса.
/// \return Длину сформированной и HDLC-кодированной телеграммы.
///
uint8_t formTeleStatus( uint8_t *aTele, uint8_t type, uint16_t adrOK,
                        uint8_t nCycle, uint8_t alarm, uint8_t *statusArray,
                        uint8_t statusLength );

#endif

//*****************************************************************************
/**
* История изменений: 
* 
* Версия 1.0.1
* Дата   22-05-2017
* Автор  Кругликов В.П.
* 
* Изменения:
*    Базовая версия.
*/

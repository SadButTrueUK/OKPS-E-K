/**
* \file    Rs422.h
* \brief   Обеспечение связи с управляющей системой по интерфейсу RS-422 
* \details Интерфейс
* \details Предназначен для обмена между концентратором 
*          нижнего уровня и ОК по двум линиям RS-422.
*
* \version 1.0.1
* \date    02-06-2017
* \author  Агулов М.А.
*/

//*****************************************************************************
// Команды препроцессора для предотвращения повторного включения содержимого файла
//*****************************************************************************
#ifndef RS422_H
#define RS422_H

//*****************************************************************************
// Подключаемые файлы
//*****************************************************************************
#include "Rs422_dataTypes.h"

//*****************************************************************************
// Описание типов данных
//*****************************************************************************

//*****************************************************************************
typedef struct Rs422_handler_ Rs422_handler;        ///< Структура состояния данных RS-422

//*****************************************************************************
/// \brief Номера линий связи.
///
typedef enum 
{
    eRs422_line_1 = 1,        ///< 1-ая линия связи
    eRs422_line_2             ///< 2-ая линия связи
} Rs422_numLine;

//*****************************************************************************
/// \brief Коды алармов.
///
typedef enum 
{
    eAlarmShortCircuitThreePhaseGen = 0x60,        ///< код аларма "Короткое замыкание в цепях 3-фазного генератора"
    eAlarmNoSupplyVoltage220V       = 0x65,        ///< код аларма "Отсутствие напряжения 220 В"
    eAlarmRPVnotTurnOn              = 0x66,        ///< код аларма "Не включается реле переключения выхода" 
    eAlarmRPVnotTurnOff             = 0x67,        ///< код аларма "Не выключается реле переключения выхода" 
    eAlarmShortCircuitContrGen      = 0x6A,        ///< код аларма "Короткое замыкание в цепях контрольного генератора"
    eAlarmControlGeneratorIsFail    = 0x6B,        ///< код аларма "Напряжение в цепях контрольного генератора не в норме"
    eAlarmNoSupplyVoltage24V        = 0xF0,        ///< код аларма "Отсутствие напряжения 24 В"

    /// \brief код аларма "Отсутствие корректного приказа по линии связи 1 дольше 1,5 с"
    ///
    eAlarmNoFirstLineExchCtrlSys    = 0xF1,

    /// \brief код аларма "Отсутствие корректного приказа по линии связи 2 дольше 1,5 с"
    ///
    eAlarmNoSecondLineExchCtrlSys   = 0xF2,

    /// \brief код аларма "Отсутствие корректного приказа по любой из линий связи смежного прибора дольше 1,5 с"
    ///
    eAlarmNoValidOrderToNeighbor    = 0xF3,
    eAlarmNeighborInSafeMode        = 0xF4,      ///< код аларма "Соседний прибор в безопасном состоянии"  
    eAlarmNoConnectWithNeighbor     = 0xF5       ///< нет связи с соcедним прибором (или неисправен канал связи)
} Rs422_alarmCode;

//*****************************************************************************
// Прототипы интерфейсных функций
//*****************************************************************************

//*****************************************************************************
/// \brief  Инициализация.
/// \param addr                     - адрес прибора;
/// \param noExchangeTime           - время формирования сигнала "нет обмена" по линии связи, мс;
/// \param noExchangeTimeCtrlSystem - время формирования сигнала "отсутствие обмена с УС", мс;
/// \param orderLength              - длина данных в приказе. 
/// \return Указатель на структуру состояния. 
/// \note Данный указатель должен передаваться в параметрах всем другим функциям,
/// выполняющим работу модуля.
///
Rs422_handler *Rs422_ctor( uint16_t addr, uint16_t noExchangeTime, uint16_t noExchangeTimeCtrlSystem,
                           uint8_t orderLength );

//*****************************************************************************
/// \brief Управление приемом и передачей данных.
/// \param handler - указатель на структуру состояния.
/// \note Вызывается из главного цикла с периодом 1 мс.
///
void Rs422_run( Rs422_handler *handler );

//*****************************************************************************
/// \brief Прием и передача данных.
/// \param handler - указатель на структуру состояния.
/// \note Вызывается из прерывания с периодом 62,5 мкс.
///
void Rs422_interrupt( Rs422_handler *handler );

//*****************************************************************************
/// \brief Разрешение работы модуля.
/// \param handler - указатель на структуру состояния;
/// \param enable  - обработка линий RS422 (true (включить), false (выключить)).
///
void Rs422_setEnable( Rs422_handler *handler, bool enable );

//*****************************************************************************
/// \brief Установка статуса прибора.
/// \param handler  - указатель на структуру состояния;
/// \param data     - указатель на массив данных статуса;
/// \param dataSize - длина массива данных статуса.
///
void Rs422_setStatus( Rs422_handler *handler, const uint8_t *data, uint8_t dataSize );

//*****************************************************************************
/// \brief Возвращает признак событий обмена на указанной линии связи.
/// \param handler - указатель на структуру состояния;
/// \param nLine   - номер линии (#eRs422_line_1, #eRs422_line_2).
/// \retval true  - есть событие;
/// \retval false - нет события.
///
bool Rs422_getLineEvent( Rs422_handler *handler, Rs422_numLine nLine );

//*****************************************************************************
/// \brief Возвращает признак отсутствия связи с УС по обеим линиям.
/// \param handler - указатель на структуру состояния;
/// \param nLine   - номер линии (#eRs422_line_1, #eRs422_line_2).
/// \retval true  - нет обмена;
/// \retval false - есть обмен.
///
bool Rs422_getNoLineExchange( Rs422_handler *handler, Rs422_numLine nLine );

//*****************************************************************************
/// \brief Возвращает признак отсутствия обмена с УС.
/// \param handler - указатель на структуру состояния;
/// \param nLine   - номер линии (#eRs422_line_1, #eRs422_line_2).
/// \retval true  - нет обмена;
/// \retval false - есть обмен.
///
bool Rs422_getNoLineExchangeCtrlSystem( Rs422_handler *handler, Rs422_numLine nLine );

//*****************************************************************************
/// \brief Возвращает признак отсутствия связи  c УС по обеим линиям.
/// \param handler - указатель на структуру состояния.
/// \retval true  - нет обмена;
/// \retval false - есть обмен.
///
bool Rs422_getNoExchangeCtrlSystem( Rs422_handler *handler );

//*****************************************************************************
/// \brief Обработка приказа и чтение его длины.
/// \param handler - указатель на структуру состояния;
/// \param data    - указатель на массив для записи приказа.
/// \return Длина приказа, байт.
///
uint8_t Rs422_getOrder( Rs422_handler *handler, uint8_t *data );

//*****************************************************************************
/// \brief Добавление кода аларма в список актуальных для прибора.
/// \param handler - указатель на структуру состояния;
/// \param alarm   - код аларма.
///
void Rs422_addAlarm( Rs422_handler *handler, Rs422_alarmCode alarm );

//*****************************************************************************
/// \brief Удаление кода аларма из списка актуальных для прибора.
/// \param handler - указатель на структуру состояния;
/// \param alarm   - код аларма.
///
void Rs422_removeAlarm( Rs422_handler *handler, Rs422_alarmCode alarm );

//*****************************************************************************
/// \brief Признак наличия нового приказа.
/// \param handler - указатель на структуру состояния;
/// \param nLine   - номер линии (#eRs422_line_1, #eRs422_line_2).
/// \retval true  - есть приказ;
/// \retval false - нет приказа.
///
bool Rs422_getNewOrderEventLine( Rs422_handler *handler, Rs422_numLine nLine );

#endif

//*****************************************************************************
/**
* История изменений:
* 
* Версия 1.0.1
* Дата   02-06-2017
* Автор  Агулов М.А.
* 
* Изменения:
*    Базовая версия.
*/

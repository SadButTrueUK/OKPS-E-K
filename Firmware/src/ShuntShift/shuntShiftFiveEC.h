/**
* \file    shuntShiftFiveEC.h
* \brief   Управления переводом c модулем реле 5-ЭЦ
* \details Интерфейс
*
* \version 1.0.1
* \date    02-02-2018
* \author  Кругликов В.П.
*/

//*****************************************************************************
// Команды препроцессора для предотвращения повторного включения содержимого файла
//*****************************************************************************
#ifndef SHUNTSHIFTFIVEEC_H
#define SHUNTSHIFTFIVEEC_H

//*****************************************************************************
// Подключаемые файлы
//*****************************************************************************
#include "shuntShiftTypes.h"

//*****************************************************************************
// Определение глобальных типизированных констант
//*****************************************************************************
extern const ArrayShuntShift fiveWireEcShuntShift;        // Переменная структуры интерфейса.

//*****************************************************************************
// Прототипы интерфейсных функций
//*****************************************************************************

//*****************************************************************************
/// \brief Инициализация.
///
void FiveWireEcShuntShift_ctor( void );

//*****************************************************************************
/// \brief Выключение.
///
void FiveWireEcShuntShift_turnOff( void );

//*****************************************************************************
/// \brief Управление работой.
/// \note Вызывается из главного цикла с периодом 1 мс.
///
void FiveWireEcShuntShift_run( void );

//*****************************************************************************
/// \brief Включение.
/// \param dir  - состояние направления (true (+), false (-));
/// \param time - устанавливаемое время перевода, мс;
/// \param st   - состояние работы (true (на стенде), false (не на стенде));
/// \param rs   - режим повторного перевода включен/отключен.
///
void FiveWireEcShuntShift_turnOn( bool dir, uint16_t time, bool st, uint8_t rs );

//*****************************************************************************
/// \brief Передача положения стрелки.
/// \param detPos   - установленная позиция контроля положения;
/// \param position - фактическое положение стрелки.
///
void FiveWireEcShuntShift_setDetPos( PositionDet_State detPos, PositionDet_State position );

//*****************************************************************************
/// \brief Передача установленной позиции перевода.
/// \param shiftPos - установленная позиция перевода.
///
void FiveWireEcShuntShift_setShiftPos( ShiftDirection shiftPos );

//*****************************************************************************
/// \brief Проверка состояния включения.
/// \retval true  - включен;
/// \retval false - выключен.
///
bool FiveWireEcShuntShift_isEnable( void );

//*****************************************************************************
/// \brief Запрос на установку позиции контроля.
/// \return Позиция контроля положения.
///
PositionDet_State FiveWireEcShuntShift_getReqPosDet( void );

//*****************************************************************************
/// \brief Запрос на установку позиции направления перевода.
/// \return Позиция направления перевода.
///
ShiftDirection FiveWireEcShuntShift_getReqShiftDir( void );

//*****************************************************************************
/// \brief Получить время последнего перевода.
/// \return Время последнего перевода, мс.
///
uint16_t FiveWireEcShuntShift_getTime( void );

//*****************************************************************************
/// \brief Получить состояние перевода.
/// \return Состояние перевода.
///
ShiftDgn FiveWireEcShuntShift_getDgn( void );

//*****************************************************************************
/// \brief Установить значение счётчика фазы стрелочного перевода.
/// \param val - устанавливаемое значение. 
///
void FiveWireEcShuntShift_setCntPhaseShift( const uint8_t val );

//*****************************************************************************
/// \brief Получить значение счётчика фазы стрелочного перевода.
/// \return - Значение счётчика фазы стрелочного перевода 
///
const uint8_t FiveWireEcShuntShift_getCntPhaseShift( void );


//*****************************************************************************
/// \brief Проверка того, что модуль прошёл режим инициализации
/// \return true - модуль в рабочем режиме , false - модуль в  режиме инициализации 
///
const bool FiveWireEcShuntShift_isWorkMode( void );

#endif

//*****************************************************************************
/**
* История изменений: 
* 
* Версия 1.0.1
* Дата   02-02-2018
* Автор  Кругликов В.П.
* 
* Изменения:
*    Базовая версия.
*/

/**
* \file    AnalogInput.h
* \brief   Модуль обработки аналоговых сигналов
* \details Интерфейс
*
* \version 1.0.1
* \date    20-02-2019
* \author  Агулов М.А.
*/

//*****************************************************************************
// Команды препроцессора для предотвращения повторного включения содержимого файла
//*****************************************************************************
#ifndef ANALOGINPUT_H
#define ANALOGINPUT_H

//*****************************************************************************
// Подключаемые файлы
//*****************************************************************************
#include "AnalogInputId.h"
#include "iodrv.h"

//*****************************************************************************
// Объявление типов данных
//*****************************************************************************

//*****************************************************************************
/// \brief Алгоритм обработки сигнала.
/// \details По каждому из каналов может выполняться дополнительная обработка сигнала 
/// по определенному алгоритму. Алгоритм обработки определяется пользователем при инициализации канала
/// измерения и зависит от типа сигнала.
/// 
typedef enum AnalogInputScript_tag 
{
    eAinScriptError,        ///< обработчик не инициализирован - является ошибкой, вызывает исключение и переход в ЗС
    eAinScriptNone,         ///< обработка сигнала не выполняется
    eAinScriptAC,           ///< переменный сигнал (AC) - выполняются алгоритмы обработки переменного сигнала
    eAinScriptDC            ///< постоянный сигнал (DC) - выполняются алгоритмы обработки постоянного сигнала
} AnalogInputScript;

//*****************************************************************************
/// \brief Данные объекта обработки аналоговых сигналов.
///
typedef struct AnalogInputValue_tag 
{
    uint16_t rms;           ///< Среднеквадратическое значение сигнала.
    uint16_t aver;          ///< Среднее значение сигнала.
    uint16_t value;         ///< Мгновенное значение сигнала с АЦП.
    uint16_t bias;          ///< Постоянное смещение для переменного сигнала (задаётся пользователем).
    uint16_t aws;           ///< Размер окна усреднения для вычисления rms и aver (задаётся пользователем константой).
    
    /// \brief Число сдвигов вправо для нормализации rms и aver (вычисляется автоматически исходя из размера окна 
    /// усреднения).
    ///
    uint16_t shift;
    
} AnalogInputValue;

//*****************************************************************************
// Прототипы интерфейсных функций
//*****************************************************************************

//*****************************************************************************
/// \brief Инициализация компонента.
/// \details Инициализируются все данные для корректной 
/// работы компонента.
/// \note Вызывается перед началом работы с компонентом 
/// обработки аналоговых сигналов.
/// \note Вызов этой функции перед использованием других функций этого 
/// компонента обязателен.
///
void AnalogInput_ctor( void );

//*****************************************************************************
/// \brief Настройка измерительного канала.
/// \param channel  - идентификатор настраиваемого аналогового канала;
/// \param filterId - идентификатор цифрового фильтра, применяемого к этому сигналу (0 - фильтр не применяется);
/// \param script - алгоритм дополнительной обработки сигнала;
/// \param bias - смещение нуля для периодического сигнала. Задается пользователем в разрядах АЦП;
/// \param aws - размер окна усреднения сигнала (Average Window Size).
///
void AnalogInput_setChannelSettings( uint16_t channel,
                                     uint16_t filterId,
                                     AnalogInputScript script,
                                     uint16_t bias,
                                     uint16_t aws);

//*****************************************************************************
/// \brief Чтение измеренных значений.
/// \note Вызывается из главного цикла с периодом 1 мс.
/// \param channel – номер канала.
/// \return Измеренные значения для указанного канала измерения.
///
const AnalogInputValue *AnalogInput_getData( uint16_t channel );

//*****************************************************************************
/// \brief Обработка аналоговых сигналов.
/// \details Основной поток.
/// \details Выполняет чтение результатов аналого-цифрового
/// преобразования, помещенных в буфер функцией #AnalogInput_runInterrupt,
/// фильтрацию и расчет значения измеряемого параметра.
/// \note За 1-ин вызов обрабатывает все данные, помещенные в буфер.
/// \note Вызывается из главного цикла с периодом 1 мс.
/// \note Вызов функции должен быть организован так, чтобы буфер был полностью заполнен.
/// Если на момент вызова в буфере будет находиться меньшее или большее количество отсчетов,
/// чем определено константой #AnalogInputDrvQueueSize, инициализированной в модуле
/// AnalogInputId.h, произойдет переход в ЗС с группой отказа #eGrPS_AnalogInput и кодом #ePS_AinErrorDriverGet.
///
void AnalogInput_run( void );

//*****************************************************************************
/// \brief Управление дискретизацией сигналов.
/// \details Читает данные из буфера АЦП и помещает их в буфер для последующей 
/// обработки функцией #AnalogInput_run. #AnalogInput_run может вызываться с более
/// низкой частотой и за один вызов обрабатывает все данные, помещенные в буфер.
/// \note Вызывается с частотой дискретизации входного сигнала.
/// \note Размер буфера определяется значением константы #AnalogInputDrvQueueSize,
/// инициализированной в модуле AnalogInputId.h. 
///
void AnalogInput_runInterrupt( void );

#endif 

//*****************************************************************************
/**
* История изменений: 
* 
* Версия 1.0.1
* Дата   20-02-2019
* Автор  Агулов М.А.
* 
* Изменения:
*     Базовая версия.
*/

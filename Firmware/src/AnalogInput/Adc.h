/**
* \file    Adc.h
* \brief   Модуль работы с АЦП, МК dsPIC33 
* \details Интерфейс
* \details <b>1 Общие сведения</b>
* \details 1.1  Модуль обеспечивает опрос результатов преобразования АЦП с буферизацией
* их в очереди. Таким образом, с его помощью можно организовать асинхронную работу с АЦП.
* Опрос результатов преобразований необходимо производить строго с частотой дискретизации, 
* а обработку значений производить вычитывая их из очереди.
* \details <b>2 Настройка модуля</b>
* \details 2.1  Для работы модуля АЦП в модуле AnalogInputId.h должен быть определен 
* список идентификаторов измеряемых параметров. Идентификаторы должны быть определены
* в перечисляемом типе #AnalogInputChannels, начиная с нуля и заканчивая значением 
* #eAinChCount, которое используется модулем для определения количества параметров.
* \note Значения идентификаторов должны идти подряд без пропусков так, чтобы значение
* предыдущего было на 1 меньше, а значение последующего - на 1 больше. Не должно быть 
* двух и более идентификаторов с одинаковыми значениями.
* \details <b>3 Использование модуля</b>
* \details 3.1  Перед использованием модуля его необходимо проинициализировать, 
* вызвав функцию #Adc_ctor.
* \details 3.2  В процедуре обработки прерываний таймера или другого источника 
* формирования временных интервалов частоты дискретизации необходимо вызывать 
* функцию #Adc_run, которая считывает результаты аналого-цифрового 
* преобразования и помещает их в очередь.
* \note Если при вызове #Adc_run не будет готовности АЦП #doneErrorCount
* раз, произойдет переход в ЗС с кодом #ePS_AdcDoneError 
* группы #eGrPS_AdcDrv. Подсчет и переход в ЗС осуществляется при помощи макроопределения
* \a CASSERT_ID.
* \details 3.3  В основном цикле функции \a main необходимо опрашивать функцию #Adc_isReady и, пока 
* она возвращает true, вычитывать данные из очереди функцией #Adc_get.
* \note Очередь должна вычитываться быстрее, чем заполнится. При ее переполнении произойдет
* переход в ЗС с кодом #ePS_AdcOverflow группы #eGrPS_AdcDrv.
*
* \version 2.0.2
* \date    12-03-2020
* \author  Агулов М.А.
*/

//*****************************************************************************
// Команды препроцессора для предотвращения повторного включения содержимого файла
//*****************************************************************************
#ifndef ADC_H
#define ADC_H

//*****************************************************************************
// Прототипы интерфейсных функций
//*****************************************************************************

//*****************************************************************************
/// \brief Инициализация модуля.
/// \note Данная функция должна быть обязательно вызвана перед вызовом остальных
/// функций этого модуля.
///
void Adc_ctor( void );

//*****************************************************************************
/// \brief Управление драйвером АЦП.
/// \details Считывает результаты аналого-цифрового преобразования 
/// и помещает их в очередь.
/// \note Допускается #doneErrorCount #CASSERT_INC
/// (см. модуль asserts.c #CASSERT_ID) вызовов подряд при отсутствии
/// готовности преобразователя.
///
void Adc_run_interrupt( void );

//*****************************************************************************
/// \brief Чтение результатов из очереди измерений.
/// \details Извлекает результаты из очереди измерений
/// и помещает их в \a array. 
/// \note Данный метод должен вызываться только когда #Adc_isReady
/// возвращает true (есть данные в очереди измерений).
/// \param array - указатель на массив передаваемых данных.
/// \note Если длина массива \a size не соответствует значению #eAinChCount, 
/// произойдет переход в ЗС с кодом #ePS_AdcDrvSetSize
/// группы #eGrPS_AdcDrv.
/// 
void Adc_get( uint16_t *array);

//*****************************************************************************
/// \brief Проверка наличия результатов в очереди измерений.
/// \retval true  - есть результаты в очереди измерений;
/// \retval false - нет результатов в очереди измерений.
///
bool Adc_isReady( void );

#endif 

//*****************************************************************************
/**
* История изменений: 
*
* Версия 1.0.1
* Дата   27-03-2016
* Автор  Годунок А.Н. 
*
* Изменения:
*     Базовая версия.
*
* Версия 2.0.1
* Дата   27-03-2017
* Автор  Третьяков В.Ж. 
*
* Изменения:
*    Изменения под компилятор XC16.
*
* Версия 2.0.2
* Дата   12-03-2020
* Автор  Агулов М.А.
*
* Изменения:
*    Откорректировано форматирование.
 */

/**
* \file    BlockExch_driver.h
* \brief   Драйвер обмена между основным и резервным приборами
* \details Интерфейс
*
* \version 1.0.1
* \date    05-05-2017
* \author  Кругликов В.П.
*/

//*****************************************************************************
// Команды препроцессора для предотвращения повторного включения содержимого файла
//*****************************************************************************
#ifndef BLOCKEXCH_DRIVER_H
#define BLOCKEXCH_DRIVER_H

//*****************************************************************************
// Подключаемые файлы
//*****************************************************************************
#include <stdbool.h>
#include <stdint.h>

//*****************************************************************************
// Глобальные константы, определенные через макросы
//*****************************************************************************

//*****************************************************************************
#define MAX_DATA_LENGTH 10U        ///< Максимальная длина данных.

//*****************************************************************************
// Прототипы интерфейсных функций
//*****************************************************************************

//*****************************************************************************
/// \brief Конструктор.
/// \return Указатель на структуру состояния драйвера.
///
const void *BlockExchDrv_ctor( void );

//*****************************************************************************
/// \brief Чтение данных из периферийного устройства.
/// \param self - указатель на данные объекта, который вернул конструктор;
/// \param array - указатель на массив передаваемых данных;
/// \param size  - длина массива.
/// \return Длину принятых данных, которые были помещены в массив \a array.
///
int BlockExchDrv_get( const void *self, uint8_t *array, int size );

//*****************************************************************************
/// \brief Готовность устройства к чтению принятых данных.
/// \param self - указатель на данные объекта, который вернул конструктор.
/// \retval true  - устройство готово к считыванию данных;
/// \retval false - устройство не готово к считыванию данных.
///
bool BlockExchDrv_isInReady( const void *self );

//*****************************************************************************
/// \brief Передача данных драйверу для вывода.
/// \param self - указатель на данные объекта, который вернул конструктор;
/// \param array - указатель на данные, которые необходимо выдать;
/// \param size - размер массива данных.
///
void BlockExchDrv_set( const void *self, uint8_t *array, int size );

//*****************************************************************************
/// \brief Готовность устройства к выводу новых данных.
/// \param self - указатель на данные объекта, который вернул конструктор.
/// \retval true  - устройство готово к выводу новых данных;
/// \retval false - устройство не готово к выводу новых данных.
///
bool BlockExchDrv_isOutReady( const void *self );

//*****************************************************************************
/// \brief Рабочий цикл.
/// \note Вызывается из прерывания с периодом 62,5 мкс.
/// \param self - указатель на данные объекта, который вернул конструктор;
/// \param update - разрешение на обновление данных для передачи.
///
void BlockExchDrv_run( const void *self, bool update );

#endif

//*****************************************************************************
/**
* История изменений:
*
* Версия 1.0.1
* Дата   05-05-2017
* Автор  Кругликов В.П.
*
* Изменения:
*    Базовая версия.
*/

/**
* \file    BinIn.h
* \brief   Чтение дискретных входов 
* \details Интерфейс
*
* \version 1.0.1
* \date    05-10-2018
* \author  Агулов М.А.
*/

//*****************************************************************************
// Команды препроцессора для предотвращения повторного включения содержимого файла
//*****************************************************************************
#ifndef BININ_H
#define BININ_H

//*****************************************************************************
// Подключаемые файлы
//*****************************************************************************
#include <stdint.h>
#include <stdbool.h>


//*****************************************************************************
// Прототипы интерфейсных функций
//*****************************************************************************

//*****************************************************************************
/// \brief Чтение тетрады данных.
/// \details Функция работает в прерывании 15.
/// \details Функция выполняет чтение тетрады данных с портов контроллера
/// и упаковывает их в байты. Упакованные данные помещаются в массив накопления 
/// #RawData, который обрабатывается в основном цикле.
///
void BinInDataRead_interrupt( void );

//*****************************************************************************
/// \brief Установка адресного дешифратора чтения данных.
/// \details Функция работает в прерывании 0.
/// \details Функция выполняет установку пинов адресного дешифратора.
///
void BinInAddrSet_interrupt( void );

//*****************************************************************************
/// \brief Инициализация переменных компонента.
/// \details Инициализируются все данные для корректной 
/// работы компонента.
/// \note Функция вызывается перед началом работы с компонентом 
/// обработки аналоговых сигналов.
/// \note Вызов этой функции перед использованием других функций этого 
/// компонента обязателен.
///
void BinIn_ctor( void );

//*****************************************************************************
/// \brief Обработка входных сигналов, считанных в прерываниях 
/// функцией #BinInDataRead_interrupt.
///
void BinIn_run( void );

//*****************************************************************************
/// \brief Возвращает состояние перемычек адреса.
/// \return Состояние перемычек А15...А0.
///
uint16_t BinIn_getAddrJumpers( void );

//*****************************************************************************
/// \brief Возвращает состояние перемычек контрольной суммы (CRC).
/// \return Состояние перемычек CRC7...CRC0.
///
uint8_t BinIn_getCrcJumpers( void );

//*****************************************************************************
/// \brief Возвращает состояние перемычек конфигурации.
/// \return Состояние конфигурации CONF0...CONF7.
///
uint8_t BinIn_getConfigJumpers( void );

//*****************************************************************************
/// \brief Возвращает состояние контактов реле РПВ. 
/// \retval true  - контакты "на мне";
/// \retval false - контакты "на соседе".
///
bool BinIn_isRpvOnMe( void );

//*****************************************************************************
/// \brief Возвращает синхронизированный результат контроля напряжения источника питания 220 В.
/// \retval true  - норма;
/// \retval false - авария.
///
bool BinIn_is220vOk( void );

//*****************************************************************************
/// \brief Возвращает результат контроля напряжения источника питания 24 В.
/// \retval true  - норма;
/// \retval false - авария.
///
bool BinIn_is24vOk( void );

#endif

//*****************************************************************************
/**
* История изменений: 
* 
* Версия 1.0.1
* Дата   05-10-2018
* Автор  Агулов М.А.
* 
* Изменения:
*     Базовая версия.
*/

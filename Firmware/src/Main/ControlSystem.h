/**
* \file    ControlSystem.h
* \brief   Общее управление работой прибора
* \details Интерфейс
*
* \version 1.0.2
* \date    27-01-2021
* \author  Кругликов В.П.
*/

//*****************************************************************************
// Команды препроцессора для предотвращения повторного включения содержимого файла
//*****************************************************************************
#ifndef CONTROLSYSTEM_H
#define CONTROLSYSTEM_H

//*****************************************************************************
// Подключаемые файлы
//*****************************************************************************
#include <stdbool.h>

//*****************************************************************************
// Объявление типов данных
//*****************************************************************************

//*****************************************************************************
/// \brief Состояния перевода стрелки при пропадании 220В
typedef enum 
{
    eNoCheck,             ///< 220В присутствует                         
    eNo220VInShuntShift,  ///< обнаружено пропадание 220В во время перевода стрелки                               
    eShuntShiftIsFailed   ///< перевод стрелки завершился неудачно без 220В                                  
} StatesCheck220VInShuntShift;


//*****************************************************************************
/// \brief Состояния автомата функции обработки пропадания 220В при переводе стрелки
///
typedef enum 
{
    eOff,
    eCount,
    eFinishShuntShift,
    eTimeout1,
    eTimeout2
} StatesCheckSupply220V;

typedef enum 
{
    eRouteShuntShift,                ///< включить режим однократного перевода
    eRouteCalibrateShuntShift,       ///< включить режим однократного калибровочного перевода
    eRouteRepeatShuntShift,          ///< включить режим повторного перевода
    eRouteRepeatCalibrateShuntShift  ///< включить режим повторного калибровочого перевода
} StatesOrderRS;
//*****************************************************************************
// Прототипы интерфейсных функций
//*****************************************************************************

//*****************************************************************************
/// \brief Инициализация модуля общего управления.
///
void ControlSystem_ctor( void );


//*****************************************************************************
/// \brief Работа модуля общего управления.
///
void ControlSystem_run( void );


//*****************************************************************************
/// \brief Проверка условий рабочего режима.
/// \retval true  - прибор может управлять переводом стрелки;
/// \retval false - прибор не может управлять переводом стрелки и должен быть переведен в БС.
///
bool ControlSystem_workCondition( void );

//*****************************************************************************
/// \brief Получить состояние автомата состояний функции managementShuntShiftWithout220V
///
StatesCheckSupply220V ControlSystem_getStateCheck220V( void );


//*****************************************************************************
/// \brief Получить состояние контроля 220В из функции managementShuntShiftWithout220V
StatesCheck220VInShuntShift ControlSystem_getStatesCheck220VInShuntShift( void ); 


//*****************************************************************************
/// \brief Получить максимальное время перевода (время T1, время T1, передаваемое в приказе от УС)
uint16_t ControlSystem_getTimeCurrentOrder( void );

//*****************************************************************************
/// \brief Установка времени обработки приказа из других модулей
// \param value - устанавливаемое значение времени обработки приказа.
///
void ControlSystem_setTimeProcessingOrder( uint16_t value);


//*****************************************************************************
/// \brief Вернуть состояние поля RS приказа
StatesOrderRS ControlSystem_getStateOrderFieldRS( void );

//*****************************************************************************
/// \brief Получить значение времени перевода(используется при калибровке в калибровочном переводе)
uint16_t ControlSystem_getTimeProcOrder( void );

#endif

//*****************************************************************************
/**
* История изменений: 
* 
* Версия 1.0.1
* Дата   02-06-2017
* Автор  Кругликов В.П.
* 
* Изменения:
*     Базовая версия.
*
* Версия 1.0.2
* Дата   27-01-2021
* Автор  Кругликов В.П.
*
* Изменения:
*   Добавлены объявления новых интерфейсов:
*   ControlSystem_getStateCheck220V,
*   ControlSystem_getStatesCheck220VInShuntShift, 
*   ControlSystem_getTimeCurrentOrder, 
*   ControlSystem_setTimeProcessingOrder
*/
